#Статистические показатели нашей маленькой конторы
'''
Программа выполняет завяленные требования, тем не менее, я постарался сделать ее более универсальной, несколько расширил функционал,
с тем, чтобы уйти от хард кода
Она может работать и в другом режиме, когда пользователь сам вводит данные за какой срок производит ввод.
'''

from statistics import median
from math import sqrt
from math import pow

#Инициация переменных
n = 0
k = []
mass = []
s = 0
all_summ = 0

#Ввод требуемых значений
#mes = int(input('Ведите количество месяцев: '))
man = int(input('Ведите количество менеджеров: '))
#Ввод данных по менеджерам
while True:
    s = input('Введите данные по менеджерам: ').split()
    if not s:
        break
    else:
        mass.append(s)
#Генерация списков и словарей
#mass = [list(map(int, input('Введите данные за месяц: ').split())) for i in range(mes)]
a = {int(n): 0 for n in range(man)}

#Цикл подсчета общего значения продаж по менеджерам
for i in range(len(mass)):
    for j in range(len(mass[i])):
        #Формирование общего списка для проведения расчетов
        k.append(int(mass[i][j]))
        #Формирование словаря для определения ударника капиталистического труда
        a[j] += int(mass[i][j])

#Расчет среднего показателя
sred_znach = sum(k) // len(k)

#Расчет медианы для списка с четным количеством элементов и с нечетным количеством элементов
k.sort()
if len(k) % 2 == 0:
    med = (k[len(k) // 2] + k[(len(k) // 2) - 1]) // 2
else:
    med = (k[len(k) // 2])

#Альтернативный вариант с использованием метода расчета медианы из библиотеки statistics
alter_med = int(median(k))

#Расчет среднеквадратичного значения по ГОСТ Р 8.736-2011
for i in range(0, len(k)):
    all_summ = all_summ + pow((k[i] - sred_znach), 2)

sd = int(sqrt(all_summ // (len(k) - 1)))


#Поиск менеджера - ударника капиталистического труда
x = max(a, key=a.get)
mx = max(a.values())

#Ввывод результатов
print('\n')
for i in range(len(mass)):
    for j in range(len(mass[i])):
        print(mass[i][j], end=' ')
    print()

print('Среднее значение: ', sred_znach)
print('Среднее квадратичное отклонение по ГОСТ Р 8.736-2011: ', sd)
print('Медиана: ', med, 'с альтернативным расчетом: ', alter_med )
print('Ударник капиталистического труда: Менеджер №', x + 1, 'с результатом: ', mx, 'тугр.' )